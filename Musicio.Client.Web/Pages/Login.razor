@page "/login"
@using Musicio.Client.Authentication
@using Musicio.Client.Validation
@using Musicio.Client.Web.Components

@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthenticationService
@inject IValidationService ValidationService

@layout LoginLayout

<Form Id="form-login">
    @if (!_loginSuccess)
    {
        <div class="alert alert-danger">
            Error logging in, make sure your credentials are correct.
        </div>
    }
    <FormGroup>
        <InputField Type="text" Placeholder="Username" OnChange="@OnUsernameChange" />
    </FormGroup>
    <FormGroup>
        <InputField Type="password" Placeholder="Password" OnChange="@OnPasswordChange" />
    </FormGroup>
    <FormGroup>
        <Button Enabled="@_buttonEnabled" Text="Login" OnClick="@LoginAsync"></Button>
    </FormGroup>
</Form>

@code {

    private bool _buttonEnabled;
    private bool _loginSuccess = true;

    private string _username;
    private string _password;
    private bool _rememberMe;

    private async Task LoginAsync()
    {

        _loginSuccess = await AuthenticationService.Login(_username, _password);

        Console.WriteLine(_loginSuccess);

        if (_loginSuccess)
        {
            StateHasChanged();

            NavigationManager.NavigateTo("/");
        }
        else
        {
            StateHasChanged();
        }
    }

    private void ValidateInput()
    {
        _buttonEnabled = ValidationService.ValidateLoginInput(_username, _password);

        StateHasChanged();
    }

    public Task OnUsernameChange(string value)
    {
        _username = value;

        ValidateInput();

        return Task.CompletedTask;
    }

    public Task OnPasswordChange(string value)
    {
        _password = value;

        ValidateInput();

        return Task.CompletedTask;
    }

    public Task OnRememberMeChange(bool value)
    {
        _rememberMe = value;

        ValidateInput();

        return Task.CompletedTask;
    }
}