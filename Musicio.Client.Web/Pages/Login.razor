@page "/login"
@using Musicio.Client.Authentication
@using Musicio.Client.Validation
@using Musicio.Client.Web.Components

@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthenticationService
@inject IValidationService ValidationService

@layout LoginLayout

@if (_login)
{
    <Form Id="form-login">
        <FormGroup>
            <h2>Login</h2>
        </FormGroup>
        <FormGroup>
            <InputField Type="text" Placeholder="Username" OnChange="@OnUsernameChange" />
        </FormGroup>
        <FormGroup>
            <InputField Type="password" Placeholder="Password" OnChange="@OnPasswordChange" />
        </FormGroup>
        <FormGroup>
            <Button Enabled="@_buttonEnabled" Text="Login" OnClick="@LoginAsync"></Button>
        </FormGroup>
        <FormGroup>
            <Button Enabled="true" Text="Register new account" OnClick="@SwitchForm"></Button>
        </FormGroup>
        @if (!_loginSuccess)
        {
            <div class="alert alert-danger">
                Error logging in, make sure your credentials are correct.
            </div>
        }
    </Form>
}
else
{
    <Form Id="form-register">
        <FormGroup>
            <h2>Register</h2>
        </FormGroup>
        <FormGroup>
            <InputField Type="text" Placeholder="Username" OnChange="@OnUsernameChange" />
        </FormGroup>
        <FormGroup>
            <InputField Type="password" Placeholder="Password" OnChange="@OnPasswordChange" />
        </FormGroup>
        <FormGroup>
            <InputField Type="confirmpassword" Placeholder="Confirm Password" OnChange="@OnConfirmPasswordChange" />
        </FormGroup>
        <FormGroup>
            <InputField Type="mail" Placeholder="E-mail" OnChange="@OnMailChange" />
        </FormGroup>
        <FormGroup>
            <Button Enabled="@_buttonEnabled" Text="Register" OnClick="@LoginAsync"></Button>
        </FormGroup>
        <FormGroup>
            <Button Enabled="true" Text="Login to existing account" OnClick="@SwitchForm"></Button>
        </FormGroup>
    </Form>
}

@code {

    private bool _buttonEnabled;
    private bool _loginSuccess = true;

    private string _username;
    private string _password;
    private string _confirmPassword;
    private string _mail;
    private bool _login = true;

    private async Task LoginAsync()
    {

        _loginSuccess = await AuthenticationService.Login(_username, _password);

        Console.WriteLine(_loginSuccess);

        if (_loginSuccess)
        {
            StateHasChanged();

            NavigationManager.NavigateTo("/");
        }
        else
        {
            StateHasChanged();
        }
    }

    private void ValidateInput()
    {
        if (_login) _buttonEnabled = ValidationService.ValidateLoginInput(_username, _password);
        else _buttonEnabled = ValidationService.ValidateRegisterInput(_username, _password, _confirmPassword, _mail);

        StateHasChanged();
    }

    private Task SwitchForm()
    {
        _login = !_login;

        StateHasChanged();

        return Task.CompletedTask;
    }

    public Task OnUsernameChange(string value)
    {
        _username = value;

        ValidateInput();

        return Task.CompletedTask;
    }

    public Task OnPasswordChange(string value)
    {
        _password = value;

        ValidateInput();

        return Task.CompletedTask;
    }

    public Task OnConfirmPasswordChange(string value)
    {
        _confirmPassword = value;

        ValidateInput();

        return Task.CompletedTask;
    }

    public Task OnMailChange(string value)
    {
        _mail = value;

        ValidateInput();

        return Task.CompletedTask;
    }
}